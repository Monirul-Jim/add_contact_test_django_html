[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "contact_management.views",
        "description": "contact_management.views",
        "isExtraImport": true,
        "detail": "contact_management.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Contact",
        "importPath": "employee.models",
        "description": "employee.models",
        "isExtraImport": true,
        "detail": "employee.models",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "contact_management.asgi",
        "description": "contact_management.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "contact_management.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-85x(n+tuhfwtxc0)2sjj&kgzxaoadja57-bj1n8l^gni0rwp8-'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-85x(n+tuhfwtxc0)2sjj&kgzxaoadja57-bj1n8l^gni0rwp8-'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'employee'",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'employee'\n]\nMIDDLEWARE = [",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'contact_management.urls'",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "ROOT_URLCONF = 'contact_management.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates',],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates',],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "WSGI_APPLICATION = 'contact_management.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nSTATICFILES_DIRS = [\n    BASE_DIR/'static'\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nSTATICFILES_DIRS = [\n    BASE_DIR/'static'\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nSTATICFILES_DIRS = [\n    BASE_DIR/'static'\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "USE_TZ = True\nSTATICFILES_DIRS = [\n    BASE_DIR/'static'\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR/'static'\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "contact_management.settings",
        "description": "contact_management.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "contact_management.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "contact_management.urls",
        "description": "contact_management.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', home, name='home'),\n    path('employees/', include('employee.urls')),\n]",
        "detail": "contact_management.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "contact_management.views",
        "description": "contact_management.views",
        "peekOfCode": "def home(request):\n    query = request.GET.get('q')\n    if query:\n        contacts = Contact.objects.filter(\n            first_name__icontains=query) | Contact.objects.filter(email__icontains=query)\n    else:\n        contacts = Contact.objects.all()\n    return render(request, 'home.html', {'contacts': contacts})",
        "detail": "contact_management.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "contact_management.wsgi",
        "description": "contact_management.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "contact_management.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "employee.migrations.0001_initial",
        "description": "employee.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Contact',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('first_name', models.CharField(max_length=100)),",
        "detail": "employee.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "employee.migrations.0002_alter_contact_phone_number",
        "description": "employee.migrations.0002_alter_contact_phone_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('employee', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='contact',\n            name='phone_number',\n            field=models.IntegerField(max_length=15),\n        ),",
        "detail": "employee.migrations.0002_alter_contact_phone_number",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "employee.migrations.0003_alter_contact_phone_number",
        "description": "employee.migrations.0003_alter_contact_phone_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('employee', '0002_alter_contact_phone_number'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='contact',\n            name='phone_number',\n            field=models.IntegerField(),\n        ),",
        "detail": "employee.migrations.0003_alter_contact_phone_number",
        "documentation": {}
    },
    {
        "label": "EmployeeConfig",
        "kind": 6,
        "importPath": "employee.apps",
        "description": "employee.apps",
        "peekOfCode": "class EmployeeConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'employee'",
        "detail": "employee.apps",
        "documentation": {}
    },
    {
        "label": "ContactForm",
        "kind": 6,
        "importPath": "employee.forms",
        "description": "employee.forms",
        "peekOfCode": "class ContactForm(forms.ModelForm):\n    class Meta:\n        model = Contact\n        fields = '__all__'",
        "detail": "employee.forms",
        "documentation": {}
    },
    {
        "label": "Contact",
        "kind": 6,
        "importPath": "employee.models",
        "description": "employee.models",
        "peekOfCode": "class Contact(models.Model):\n    first_name = models.CharField(max_length=100)\n    last_name = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n    phone_number = models.IntegerField()\n    address = models.TextField()\n    def __str__(self):\n        return self.first_name",
        "detail": "employee.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "employee.urls",
        "description": "employee.urls",
        "peekOfCode": "urlpatterns = [\n    path('add/', views.add_contact, name='add_contact'),\n    path('<int:pk>/', views.contact_detail, name='contact_detail'),\n    path('<int:pk>/edit/', views.edit_contact, name='edit_contact'),\n    path('<int:pk>/delete/', views.delete_contact, name='delete_contact'),\n]",
        "detail": "employee.urls",
        "documentation": {}
    },
    {
        "label": "add_contact",
        "kind": 2,
        "importPath": "employee.views",
        "description": "employee.views",
        "peekOfCode": "def add_contact(request):\n    if request.method == 'POST':\n        form = ContactForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('home')\n    else:\n        form = ContactForm()\n    return render(request, 'employee/contact_form.html', {'form': form})\ndef contact_detail(request, pk):",
        "detail": "employee.views",
        "documentation": {}
    },
    {
        "label": "contact_detail",
        "kind": 2,
        "importPath": "employee.views",
        "description": "employee.views",
        "peekOfCode": "def contact_detail(request, pk):\n    contact = get_object_or_404(Contact, pk=pk)\n    return render(request, 'employee/contact_detail.html', {'contact': contact})\ndef edit_contact(request, pk):\n    contact = get_object_or_404(Contact, pk=pk)\n    if request.method == 'POST':\n        form = ContactForm(request.POST, instance=contact)\n        if form.is_valid():\n            form.save()\n            return redirect('home')",
        "detail": "employee.views",
        "documentation": {}
    },
    {
        "label": "edit_contact",
        "kind": 2,
        "importPath": "employee.views",
        "description": "employee.views",
        "peekOfCode": "def edit_contact(request, pk):\n    contact = get_object_or_404(Contact, pk=pk)\n    if request.method == 'POST':\n        form = ContactForm(request.POST, instance=contact)\n        if form.is_valid():\n            form.save()\n            return redirect('home')\n    else:\n        form = ContactForm(instance=contact)\n    return render(request, 'employee/contact_form.html', {'form': form})",
        "detail": "employee.views",
        "documentation": {}
    },
    {
        "label": "delete_contact",
        "kind": 2,
        "importPath": "employee.views",
        "description": "employee.views",
        "peekOfCode": "def delete_contact(request, pk):\n    contact = get_object_or_404(Contact, pk=pk)\n    if request.method == 'POST':\n        contact.delete()\n        return redirect('home')\n    return render(request, 'employee/contact_confirm_delete.html', {'contact': contact})",
        "detail": "employee.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'contact_management.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]